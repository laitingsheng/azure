on:
  push:
    branches:
    - main

permissions:
  id-token: write

env:
  ARM_USE_OIDC: 'true'
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  TF_INPUT: 0
  TF_VAR_apex: ${{ vars.APEX_DOMAINS }}
  TF_VAR_github: ${{ github.repository }}

jobs:
  plan:
    runs-on: ubuntu-latest
    environment: devops
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: terraform
      uses: hashicorp/setup-terraform@v3
    - name: terraform fmt
      shell: bash
      run: terraform fmt -check -diff
    - name: terraform init
      shell: bash
      run: |
        cat >backend.tfvars <<EOF
        storage_account_name = "satfstateea"
        container_name       = "tfstate"
        key                  = "${{ secrets.TERRAFORM_BACKEND_FILENAME }}"
        EOF
        terraform init -backend-config=backend.tfvars
    - name: terraform plan
      id: plan
      shell: bash
      run: |
        exitcode=0
        terraform plan -detailed-exitcode || exitcode=$?
        cat >>"${GITHUB_OUTPUT}" <<<"exitcode=${exitcode}"
        if [ $exitcode -eq 2 ]
        then
            exitcode=0
        fi
        exit "${exitcode}"
    outputs:
      plan: ${{ steps.plan.outputs.exitcode }}
  apply:
    runs-on: ubuntu-latest
    needs: plan
    if: needs.plan.outputs.plan == '2'
    environment: devops
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: terraform
      uses: hashicorp/setup-terraform@v3
    - name: terraform init
      shell: bash
      run: |
        cat >backend.tfvars <<EOF
        storage_account_name = "satfstateea"
        container_name       = "tfstate"
        key                  = "${{ secrets.TERRAFORM_BACKEND_FILENAME }}"
        EOF
        terraform init -backend-config=backend.tfvars
    - name: terraform apply
      shell: bash
      run: |
        terraform apply -auto-approve
